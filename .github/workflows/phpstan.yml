name: PHPStan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest]

    name: PHPStan
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: latest

    - name: Check PHP Version
      run: php -v

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: ./src/vendor
        key: ${{ runner.os }}-php-${{ hashFiles('composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md
    - name: Run test suite for composer updates.
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Configure environment for Tests
      run: |
        cp ./src/config-sample.php ./src/config.php
        mkdir -p ./src/data/cache
        mkdir -p ./src/data/log
        echo > ./src/data/log/license.log
        echo > ./src/data/log/application.log
        echo > ./src/data/log/php_error.log
        rm -rf ./src/install

    - name: Run PHPStan
      uses: php-actions/phpstan@v3
      with:
        configuration: phpstan.neon
        memory_limit: 512M
